1. get all statuses, not repeating, alphabetically ordered.

SELECT DISTINCT status
FROM tasks
ORDER by status

2. get the count of all tasks in each project, order by tasks count descending.

SELECT project_id, count(id)
FROM tasks
GROUP BY project_id
ORDEDR BY count(id) DESC

3. get the count of all tasks in each project, order by projects names.

SELECT projects.name, count(id)
FROM projects
LEFT JOIN tasks ON projects.id = tasks.project_id
GROUP BY projects.name
ORDER BY projects.name

4. get the tasks for all projects having the name beginning with "N" letter.

SELECT projects.name AS project, tasks.*
FROM projects
LEFT JOIN tasks ON projects.id = tasks.project_id
WHERE projects.name LIKE "N%"

5. get the list of all projects containing the 'a' letter in the middle of the name, and show the tasks count near each project. Mention that there can exist projects without tasks and tasks with project_id = NULL.

SELECT projects.name AS project, count(tasks.id)
FROM projects
LEFT JOIN tasks ON projects.id = tasks.project_id
WHERE projects.name LIKE "%a%"

6. get the list of tasks with duplicate names. Order alphabetically.

SELECT id, name
FROM tasks
WHERE name IN (
SELECT name
FROM tasks
GROUP BY name
HAVING count(*) > 1
)
ORDER BY name ASC

7. get list of tasks having several exact matches of both name and status, from the project 'Garage'. Order by matches count.

SELECT tasks.name, tasks.status
FROM projects
LEFT JOIN tasks ON projects.id = tasks.project_id
WHERE projects.name = 'Garage'
GROUP BY tasks.name, tasks.status
HAVING count(tasks.name) > 1
ORDEDR BY count(tasks.name)

8. get the list of project names having more than 10 tasks in status 'completed'. Order by project_id.

SELECT projects.name
FROM projects
LEFT JOIN tasks ON projects.id = tasks.project_id
WHERE tasks.status = 'completed'
GROUP BY projects.id
HAVING count(tasks.name) > 10
ORDER BY projects.id
